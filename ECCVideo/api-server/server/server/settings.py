"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os,datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@mq+jgm$p&fr__pj7@yx^kjiwgj7!x*=_@-4x_u=8-v*p#==c^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
ROOT_URLCONF = __name__

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_filters',
    'channels',
    'drf_yasg',
    'api_server', 
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'

CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'
ASGI_APPLICATION = 'server.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            # "hosts": [('channel_redis', 6379)],
            "hosts": [(os.environ.get('ECCI_APISERVER_REDIS_HOST',"channel_redis"), int(os.environ.get('ECCI_APISERVER_REDIS_PORT',6379)))],
        },
    },
}
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('ECCI_APISERVER_POSTGRES_DB', 'edgeai'),
        'USER': os.environ.get('ECCI_APISERVER_POSTGRES_USER', 'postgres'),
        'PASSWORD': os.environ.get('ECCI_APISERVER_POSTGRES_PASSWORD', 'postgres'),
        'HOST': os.environ.get('ECCI_APISERVER_PS_HOST', 'db'),
        # 'HOST': os.environ.get('PS_HOST', '127.0.0.1'),
        'PORT': os.environ.get('ECCI_APISERVER_PS_PORT', 5432),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'edgeai',
#         'USER': 'admin',
#         'PASSWORD': 'admin',
#         'HOST': '111.231.144.123',
#         'PORT': '5433',
#     }
# }


#specify the model that authetication will use
AUTH_USER_MODEL = 'api_server.User'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.UnsaltedMD5PasswordHasher',
]
# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/yamls/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'yamls').replace('\\', '/')



APPEND_SLASH = False

LOGIN_URL = 'rest_framework:login'
LOGOUT_URL = 'rest_framework:logout'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication'
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'UPLOADED_FILES_USE_URL': False,
    'DEFAULT_PAGINATION_CLASS': 'api_server.pagination.ResultSetPagination',
    'PAGE_SIZE': 10,
    'MAX_PAGE_SIZE': 100,
    'PAGE_SIZE_QUERY_PARAM': 'limit',
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
}


JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=2), #设置JWT token有效期为2小时
    'JWT_ALLOW_REFRESH': False, 
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_AUTH_COOKIE': "Authorization",
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'api_server.utils.jwt_response_payload_handler',
    'JWT_GET_USER_SECRET_KEY': 'api_server.models.jwt_get_secret_key',
}


SIGNED_URL_TTL=1*10*60 #设置下载链接有效时间为10分钟
SIGNED_URL_QUERY_PARAM='sig'

SESSION_COOKIE_AGE=1*60*60 #设置Session Cookie有效时间为1小时
SESSION_EXPIRE_AT_BROWSER_CLOSE=True


ALLOWED_HOSTS = ['*']

HARBOR_IP_PORT='192.168.0.163:8000'


# 链接driver program mqtt

MQTT_IP = '192.168.79.220'
MQTT_PORT = 1883

# Timing cleanup of obsolete monitoring data
CLEANUP_OUTDATED_MONITORDATA_CRON_MINUTE = 00
CLEANUP_OUTDATED_MONITORDATA_CRON_HOUR = 00
